version: '3.3'
networks:
  # this network must already be created on the system, via:
  # docker network create -d overlay --attachable jhub
  jhub:
    external:
      name: 'jhub'
services:
    rabbit:
        hostname: rabbit            
        image: rabbit
        build:
            context: ./docker
            dockerfile: rabbitmq.dockerfile
        environment:
            - RABBITMQ_DEFAULT_USER=admin
            - RABBITMQ_DEFAULT_PASS=mypass
            - HOSTNAME=rabbitmq                                     
            - RABBITMQ_NODENAME=rabbitmq 
        ports:
            - "5672:5672"  # we forward this port because it's useful for debugging
            - "15672:15672"  # here, we can access rabbitmq management plugin   
        networks:
            - jhub

    worker:
        image: celeryworker
        privileged: true
        build:
            context: ./docker
            dockerfile: celery.dockerfile
        volumes:
            - ./celeryworker:/app/celeryworker
            - /var/run/docker.sock:/var/run/docker.sock
        links:
            - rabbit
        depends_on:
            - rabbit
        deploy:
            mode: replicated
            replicas: 5
            resources:
              limits:
                cpus: '2.0'
                memory: 4G
        networks:
            - jhub

    jupyterhub:
        image: cuahsi/jupyterhub:latest
        privileged: true
        environment:
            - HYDROSHARE_CLIENT_ID=
            - HYDROSHARE_CLIENT_SECRET=
            - HYDROSHARE_REDIRECT_COOKIE_PATH=
            - OAUTH_CALLBACK_URL=
            - JUPYTER_PORT=
            - JUPYTER_NOTEBOOK_DIR=
            - JUPYTER_USERSPACE_DIR=
            - JUPYTER_STATIC_DIR=
            - DOCKER_NETWORK=
            - SSL_ENABLED=0 
            - SSL_CERT=
            - SSL_KEY=
            - DOCKER_IMAGE_NAME=
            - PYTHON_LIBS=
            - SAMPLE_DATA=
            - JUPYTER_BASE=
        ports:
            - "80:80"
        volumes:
            - type: bind
              source: [PATH TO USERSPACE ON HOST]
              target: /remote/data/userspace
            - type: bind
              source: ./jupyterhub/config
              target: /srv/jupyterhub/config
              read_only: true
            - type: bind
              source: /var/run/docker.sock
              target: /var/run/docker.sock 
        networks: 
            - jhub

    jupyterhub_rest:
        image: cuahsi/jupyterhub-rest:latest
        environment:
            - HYDROSHARE_REDIRECT_COOKIE_PATH=
            - JUPYTER_HUB_IP=
            - JUPYTER_PORT=
            - JUPYTER_NOTEBOOK_DIR=
            - JUPYTER_USERSPACE_DIR=
            - JUPYTER_USER=
            - JUPYTER_REST_IP=
            - JUPYTER_REST_PORT=
            - SSL_ENABLED=
            - SSL_CERT=
            - SSL_KEY=
        ports:
            - "8080:8080"
        volumes:
            - type: bind
              source: /remote/data/userspace
              target: /remote/data/userspace
        networks: 
            - jhub
